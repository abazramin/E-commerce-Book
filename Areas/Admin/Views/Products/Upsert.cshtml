@model Bullky.Models.ViewModels.ProductVm

@{
    //ViewData["Title"] = "Create";
}

<h1>@(Model.Product.Id != 0 ? "Update" : "Create") Product </h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-lg-12">
        <form asp-action="Upsert" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="@Model.Product.Id" type="hidden" />
            <input asp-for="@Model.Product.ImageUrl" type="hidden" />
            <div class="row">
                <div class="col-lg-10">
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Title" class="control-label"></label>
                        <input asp-for="@Model.Product.Title" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.Title" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Description" class="control-label"></label>
                        <textarea asp-for="@Model.Product.Description" class="form-control"></textarea>
                        <span asp-validation-for="@Model.Product.Description" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.ISBN" class="control-label"></label>
                        <input asp-for="@Model.Product.ISBN" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.ISBN" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Author" class="control-label"></label>
                        <input asp-for="@Model.Product.Author" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.Author" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.ListPrice" class="control-label"></label>
                        <input asp-for="@Model.Product.ListPrice" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.ListPrice" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Price" class="control-label"></label>
                        <input asp-for="@Model.Product.Price" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.Price" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Price50" class="control-label"></label>
                        <input asp-for="@Model.Product.Price50" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.Price50" class="text-danger"></span>
                    </div>
                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.Price100" class="control-label"></label>
                        <input asp-for="@Model.Product.Price100" class="form-control shadow" />
                        <span asp-validation-for="@Model.Product.Price100" class="text-danger"></span>
                    </div>


                    <div class="form-group my-2">
                        <label asp-for="@Model.Product.ImageUrl" class="control-label"></label>
                        <input type="file" name="file" class="form-control shadow" />
                    </div>


                    <div class="form-group my-2">
                        <select asp-for="@Model.Product.CategoryId" asp-items="@Model.CategoryList" class="form-control">
                            <option disabled selected>-- Select Catorgert -- </option>
                        </select>
                    </div>

                </div>
                <div class="col-lg-2">
                    <img src="@Model.Product.ImageUrl" width="100%" style="" />
                </div>
            </div>


            <div class="form-group my-2">
                @if (Model.Product.Id != 0)
                {
                    <input type="submit" value="Update" class="btn btn-primary" />

                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-primary" />

                }
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>

          tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Apr 21, 2025:
            'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
